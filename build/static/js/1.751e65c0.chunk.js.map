{"version":3,"sources":["components/TagIndexPage.module.css","components/TagPage.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/TagIndexPage.js","components/TagPage.js","utils/getTagsFromSiteMap.js","routes/tags.js"],"names":["module","exports","TagIndexPage","TagPage","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","props","react_default","a","createElement","className","styles","tags","map","tag","key","href","dist_es","name","count","_ref","blogRoot","routes","route","url","ArticleSummary","getTagsFromSiteMap","siteMap","Object","values","from","Set","concat","apply","data","tagRoutes","compose","withContext","req","context","objectSpread","tagsRoot","mountpath","mount","/","title","getView","_getView","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","router","resolveSiteMap","predicate","chunk","pathname","indexOf","sent","fromPairs","toLowerCase","forEach","abrupt","components_TagIndexPage","join","stop","_x","_x2","this","arguments","/:tag","getTitle","params","_getView2","_callee2","lowerCaseTag","_context2","entries","_ref2","find","metaTag","components_TagPage","_x3","_x4"],"mappings":"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","file":"static/js/1.751e65c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagIndexPage\":\"TagIndexPage_TagIndexPage__2I6Tl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagPage\":\"TagPage_TagPage__7PiNG\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react'\r\nimport { Link } from 'react-navi'\r\nimport styles from './TagIndexPage.module.css'\r\n\r\nfunction TagIndexPage(props) {\r\n  return (\r\n    <div className={styles.TagIndexPage}>\r\n      <h1>Tags</h1>\r\n      <ul>\r\n        {props.tags.map(tag =>\r\n          <li key={tag.href}>\r\n            <Link href={tag.href}>{tag.name} ({tag.count})</Link>\r\n          </li>  \r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TagIndexPage","import React from 'react'\r\nimport ArticleSummary from './ArticleSummary'\r\nimport styles from './TagPage.module.css'\r\n\r\nfunction TagPage({ blogRoot, name, routes }) {\r\n  return (\r\n    <div className={styles.TagPage}>\r\n      <h1>{name} posts</h1>\r\n      <ul>\r\n        {routes.map(route =>\r\n          <li key={route.url.href}>\r\n            <ArticleSummary blogRoot={blogRoot} route={route} />\r\n          </li>  \r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TagPage","/**\r\n * Returns an object mapping the URL of each of the site's pages to it's `title`\r\n * and `meta` objects.\r\n *\r\n * This object can be computed at runtime given a `router`, or read from a\r\n * global `pageDetailsMap` object. This allows for access to the page map during\r\n * development, while also allowing production builds to use a prebuilt copy.\r\n */\r\nfunction getTagsFromSiteMap(siteMap) {\r\n  let routes = Object.values(siteMap.routes)\r\n  return Array.from(\r\n    new Set(\r\n      [].concat.apply(\r\n        [],\r\n        routes.map(route => (route.data && route.data.tags) || []),\r\n      ),\r\n    ),\r\n  )\r\n}\r\n\r\nexport default getTagsFromSiteMap\r\n","import React from 'react'\r\nimport { compose, mount, route, withContext } from 'navi'\r\nimport { join } from 'path'\r\nimport { fromPairs } from 'lodash'\r\nimport TagIndexPage from '../components/TagIndexPage'\r\nimport TagPage from '../components/TagPage'\r\nimport getTagsFromSiteMap from '../utils/getTagsFromSiteMap'\r\n\r\nconst tagRoutes = compose(\r\n  withContext((req, context) => ({\r\n    ...context,\r\n    tagsRoot: req.mountpath,\r\n  })),\r\n  mount({\r\n    '/': route({\r\n      title: 'Tags',\r\n\r\n      getView: async (req, context) => {\r\n        // Build a list of pages for each tag\r\n        let siteMap = await req.router.resolveSiteMap(context.blogRoot, {\r\n          predicate: chunk =>\r\n            chunk.url.pathname.indexOf(context.tagsRoot) === -1,\r\n        })\r\n        let tags = getTagsFromSiteMap(siteMap)\r\n        let tagRoutes = fromPairs(tags.map(name => [name.toLowerCase(), []]))\r\n        Object.values(siteMap.routes).forEach((route) => {\r\n          let data = route.data\r\n          if (data && data.tags) {\r\n            data.tags.forEach(tag => {\r\n              tag = tag.toLowerCase()\r\n              if (tagRoutes[tag]) {\r\n                tagRoutes[tag].push(route)\r\n              }\r\n            })\r\n          }\r\n        })\r\n\r\n        return (\r\n          <TagIndexPage\r\n            blogRoot={context.blogRoot}\r\n            tags={tags.map(name => ({\r\n              name,\r\n              href: join(req.mountpath, name.toLowerCase()),\r\n              count: (tagRoutes[name] || []).length,\r\n            }))}\r\n          />\r\n        )\r\n      },\r\n    }),\r\n\r\n    '/:tag': route({\r\n      getTitle: req => req.params.tag,\r\n      getView: async (req, context) => {\r\n        let lowerCaseTag = req.params.tag.toLowerCase()\r\n\r\n        // Build a list of pages that include the tag from the site map\r\n        let siteMap = await req.router.resolveSiteMap(context.blogRoot, {\r\n          predicate: chunk =>\r\n            chunk.url.pathname.indexOf(context.tagsRoot) === -1,\r\n        })\r\n        let routes = []\r\n        Object.entries(siteMap.routes).forEach(([_, route]) => {\r\n          let tags = (route.data && route.data.tags) || []\r\n          if (tags.find(metaTag => metaTag.toLowerCase() === lowerCaseTag)) {\r\n            routes.push(route)\r\n          }\r\n        })\r\n\r\n        return (\r\n          <TagPage\r\n            blogRoot={context.blogRoot}\r\n            name={req.params.tag}\r\n            routes={routes}\r\n          />\r\n        )\r\n      },\r\n    }),\r\n  }),\r\n)\r\n\r\nexport default tagRoutes\r\n"],"sourceRoot":""}