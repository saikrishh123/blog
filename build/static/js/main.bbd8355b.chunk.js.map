{"version":3,"sources":["utils/formats.js","components/ArticleMeta.js","components/ArticleMeta.module.css","components/BlogIndexPage.module.css","components/LoadingIndicator.module.css","components/BlogLayout.module.css","components/ArticleSummary.js","components/ArticleSummary.module.css","components/Bio.module.css","components/BlogPostLayout.module.css","siteMetadata.js","components/Bio.js","utils/getGravatarURL.js","components/Pagination.js","components/BlogIndexPage.js","components/NotFoundPage.js","components/LoadingIndicator.js","components/BlogLayout.js","components/BlogPostLayout.js","routes/posts/index.js","routes/index.js","serviceWorker.js","index.js","components/Pagination.module.css"],"names":["months","ArticleMeta","_ref","readingTimeElement","blogRoot","meta","readingTime","minutes","Math","max","round","cups","react_default","a","createElement","Fragment","className","styles","Array","fill","join","dateTime","date","toUTCString","dateString","Date","monthName","getMonth","dayOfMonth","getDate","fourDigitYear","getFullYear","concat","formatDate","tags","length","map","tag","key","es","href","module","exports","title","articlesList","footer","LoadingIndicator","active","LoadingIndicator-animation","container","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_navi__WEBPACK_IMPORTED_MODULE_1__","_ArticleMeta__WEBPACK_IMPORTED_MODULE_2__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3___default","ArticleSummary","route","url","data","spoiler","Bio","header","bio","links","next","content","siteMetadata","author","description","indexPageSize","props","email","size","_ref$defaultURL","defaultURL","hash","md5","toLowerCase","trim","encodeURIComponent","getGravatarURL","src","alt","width","height","Pagination","pageCount","pageNumber","dist_es","previous","String","pages","current","count","BlogIndexPage","postRoutes","components_Bio","components_Pagination","NotFoundPage","NotFound","style","BlogLayout","isViewingIndex","loadingRoute","useLoadingRoute","components_LoadingIndicator","render","components_NotFoundPage","BlogPostLayout","_useCurrentRoute","useCurrentRoute","_ref2","MDXComponent","pathname","dist","components","Link","wrapper","_ref3","children","previousDetails","nextDetails","postModules","./2019-01-05-welcome/post.js","e","then","bind","importPost","postPathnames","Object","keys","datePattern","postDetails","slug","slugify","replace","dateMatch","match","parseInt","posts","sortBy","reverse","i","getPage","Navi","asyncToGenerator","regenerator_default","mark","_callee2","post","getContent","previousSlug","previousPost","nextSlug","nextPost","previousPostDetails","nextPostDetails","wrap","_context2","prev","sent","default","objectWithoutProperties","abrupt","getData","req","context","objectSpread","getView","_getView","_callee","_ref4","other","_context","stop","apply","this","arguments","chunks","chunk","chunkPagePairs","pageTitle","Promise","all","router","resolve","method","_x3","view","components_BlogIndexPage","_x","_x2","routes","compose","withContext","mountpath","withView","path","test","components_BlogLayout","mount","/","shift","/page","/1","redirect","fromPairs","/posts","components_BlogPostLayout","/tags","lazy","/about","/rss","resolveSiteMap","Boolean","window","location","hostname","register","main","_main","navigation","console","log","steady","process","renderer","ReactDOM","hydrate","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbd8355b.chunk.js","sourcesContent":["export let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\nexport function formatDate(dateString) {\r\n  let date = new Date(dateString)\r\n  let monthName = months[date.getMonth()]\r\n  let dayOfMonth = date.getDate()\r\n  let fourDigitYear = date.getFullYear()\r\n\r\n  return `${monthName} ${dayOfMonth}, ${fourDigitYear}`\r\n}","import { join } from 'path'\r\nimport React from 'react'\r\nimport { Link } from 'react-navi'\r\nimport { formatDate } from '../utils/formats'\r\nimport styles from './ArticleMeta.module.css'\r\n\r\nfunction ArticleMeta({ blogRoot, meta, readingTime }) {\r\n  let readingTimeElement\r\n  if (readingTime) {\r\n    let minutes = Math.max(Math.round(readingTime.minutes), 1)\r\n    let cups = Math.round(minutes / 5);\r\n    readingTimeElement =\r\n      <React.Fragment>\r\n        {' '}&bull;{' '}\r\n        <span className={styles.readingTime}>\r\n          {new Array(cups || 1).fill('☕️').join('')} {minutes} min read\r\n        </span>\r\n      </React.Fragment>\r\n  }\r\n      \r\n  return (\r\n    <small className={styles.ArticleMeta}>\r\n      <time dateTime={meta.date.toUTCString()}>{formatDate(meta.date)}</time>\r\n      {\r\n        meta.tags &&\r\n        meta.tags.length &&\r\n        <>\r\n          {' '}&bull;{' '}\r\n          <ul className={styles.tags}>\r\n            {meta.tags.map(tag =>\r\n              <li key={tag}>\r\n                <Link href={join(blogRoot, 'tags', tag)}>{tag}</Link>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </>\r\n      }\r\n      {readingTimeElement || null}\r\n    </small>\r\n  )\r\n}\r\n\r\nexport default ArticleMeta","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"ArticleMeta_tags__3nyJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogIndexPage_title__3EElR\",\"articlesList\":\"BlogIndexPage_articlesList__2sE4I\",\"footer\":\"BlogIndexPage_footer__ydzFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingIndicator\":\"LoadingIndicator_LoadingIndicator__2LgPA\",\"active\":\"LoadingIndicator_active__2DpG2\",\"LoadingIndicator-animation\":\"LoadingIndicator_LoadingIndicator-animation__10ufM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BlogLayout_container__2as9h\",\"title\":\"BlogLayout_title__1U9Tq\"};","import React from 'react'\r\nimport { Link } from 'react-navi'\r\nimport ArticleMeta from './ArticleMeta'\r\nimport styles from './ArticleSummary.module.css'\r\n\r\nfunction ArticleSummary({ blogRoot, route }) {\r\n  return (\r\n    <article className={styles.ArticleSummary}>\r\n      <h2><Link href={route.url.href}>{route.title}</Link></h2>\r\n      <ArticleMeta blogRoot={blogRoot} meta={route.data} />\r\n      <p>{route.data.spoiler}</p>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default ArticleSummary","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArticleSummary\":\"ArticleSummary_ArticleSummary__2MzS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bio\":\"Bio_Bio__3mele\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogPostLayout_title__1EBFv\",\"header\":\"BlogPostLayout_header__11__Q\",\"footer\":\"BlogPostLayout_footer__3nMgj\",\"bio\":\"BlogPostLayout_bio__MBZh-\",\"links\":\"BlogPostLayout_links___tyRy\",\"next\":\"BlogPostLayout_next__Byx2i\",\"content\":\"BlogPostLayout_content__2QpLT\"};","export default {\r\n  // The blog's title as it appears in the layout header, and in the document\r\n  // <title> tag.\r\n  title: \"Silent Tides\",\r\n\r\n  author: \"Krishna\",\r\n  description: \"Understanding the silent tides of the universe aimed to improve the harmony of the world\",\r\n\r\n  // The number of posts to a page on the site index.\r\n  indexPageSize: 10,\r\n}\r\n","import React from 'react'\r\nimport styles from './Bio.module.css'\r\nimport { getGravatarURL } from '../utils/getGravatarURL'\r\n\r\nfunction Bio(props) {\r\n  let photoURL = getGravatarURL({\r\n    email: \"test1@example.com\",\r\n    size: 56,\r\n  })\r\n\r\n  return (\r\n    <div className={`\r\n      ${styles.Bio}\r\n      ${props.className || ''}\r\n    `}>\r\n      <img src=\"./logo.PNG\" alt=\"Me\" width=\"10000\" height=\"6000\"/>\r\n      <p>\r\n        Silence isn't empty, it's full of answers - Narendra Jugnu during his chess games.  \r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import md5 from 'blueimp-md5'\r\n\r\nexport function getGravatarURL({ email, size, defaultURL = 'identicon' }) {\r\n  let hash = md5(email.toLowerCase().trim())\r\n  return `https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${encodeURIComponent(defaultURL)}`\r\n}\r\n","import { join } from 'path'\r\nimport React from 'react'\r\nimport { Link } from 'react-navi'\r\nimport styles from './Pagination.module.css'\r\n\r\nfunction Pagination({ blogRoot, pageCount, pageNumber }) {\r\n  return (\r\n    <small className={styles.Pagination}>\r\n      {\r\n        pageNumber !== 1 &&\r\n        <Link\r\n          className={styles.previous}\r\n          href={join(blogRoot, 'page', String(pageNumber - 1))}>\r\n          ← Previous\r\n        </Link>\r\n      }\r\n      <span className={styles.pages}>\r\n        {' '}Page <span className={styles.current}>{pageNumber}</span>/<span className={styles.count}>{pageCount}</span>{' '}\r\n      </span>\r\n      {\r\n        pageNumber < pageCount &&\r\n        <Link\r\n          className={styles.next}\r\n          href={join(blogRoot, 'page', String(pageNumber + 1))}>\r\n          Next →\r\n        </Link>\r\n      }\r\n    </small>\r\n  )\r\n}\r\n\r\nexport default Pagination","import React from 'react'\r\nimport { Link } from 'react-navi'\r\nimport siteMetadata from '../siteMetadata'\r\nimport ArticleSummary from './ArticleSummary'\r\nimport Bio from './Bio'\r\nimport Pagination from './Pagination'\r\nimport styles from './BlogIndexPage.module.css'\r\n\r\nfunction BlogIndexPage({ blogRoot, pageCount, pageNumber, postRoutes }) {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 className={styles.title}>\r\n          <Link href={blogRoot}>{siteMetadata.title}</Link>\r\n        </h1>\r\n        <Bio />\r\n      </header>\r\n      <ul className={styles.articlesList}>\r\n        {postRoutes.map(route =>\r\n          <li key={route.url.href}>\r\n            <ArticleSummary blogRoot={blogRoot} route={route} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n      {\r\n        pageCount > 1 &&\r\n        <Pagination\r\n          blogRoot={blogRoot}\r\n          pageCount={pageCount}\r\n          pageNumber={pageNumber}\r\n        />\r\n      }\r\n      <footer className={styles.footer}>\r\n        <div>\r\n         \r\n          <Link href='./about'>\r\n            About\r\n          </Link> &bull;{' '}\r\n          <Link href='./tags'>\r\n            Tags\r\n          </Link> &bull;{' '}\r\n          {/* <a href='https://github.com/frontarm/create-react-blog'>\r\n            Source\r\n    </a>*/}\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogIndexPage","import React from 'react'\r\nimport styles from './NotFoundPage.module.css'\r\n\r\n// Note that create-react-navi-app will always show an error screen when this\r\n// is rendered. This is because the underlying react-scripts package shows\r\n// the error screen when a NotFoundError is thrown, even though it's caught\r\n// by <NotFoundBoundary>. To see the error rendered by this function,\r\n// you'll just need to close the error overlay with the \"x\" at the top right.\r\nfunction NotFoundPage() {\r\n  return (\r\n    <div className={styles.NotFound}>\r\n      <h1>404 - Not Found</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage","import React from 'react'\r\nimport styles from './LoadingIndicator.module.css'\r\n\r\nfunction LoadingIndicator({ active, className, style }) {\r\n  return (\r\n    <div\r\n      className={`\r\n        ${styles.LoadingIndicator}\r\n        ${active ? styles.active : ''}\r\n        ${className}\r\n      `}\r\n      style={style}\r\n    />\r\n  )\r\n}\r\n\r\nexport default LoadingIndicator","import React from 'react'\r\nimport {\r\n  View,\r\n  Link,\r\n  NotFoundBoundary,\r\n  useLoadingRoute,\r\n} from 'react-navi'\r\nimport siteMetadata from '../siteMetadata'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport LoadingIndicator from './LoadingIndicator'\r\nimport styles from './BlogLayout.module.css'\r\n\r\nfunction BlogLayout({ blogRoot, isViewingIndex }) {\r\n  let loadingRoute = useLoadingRoute()\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <LoadingIndicator active={!!loadingRoute} />\r\n\r\n      {// Don't show the header on index pages, as it has a special header.\r\n      !isViewingIndex && (\r\n        <header>\r\n          <h3 className={styles.title}>\r\n            <Link href={blogRoot}>{siteMetadata.title}</Link>\r\n          </h3>\r\n        </header>\r\n      )}\r\n\r\n      <main>\r\n        <NotFoundBoundary render={() => <NotFoundPage />}>\r\n          <View />\r\n        </NotFoundBoundary>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogLayout\r\n","import React from 'react'\r\nimport { View, Link, useCurrentRoute } from 'react-navi'\r\nimport { MDXProvider } from '@mdx-js/tag'\r\nimport siteMetadata from '../siteMetadata'\r\nimport ArticleMeta from './ArticleMeta'\r\nimport Bio from './Bio'\r\nimport styles from './BlogPostLayout.module.css'\r\n\r\nfunction BlogPostLayout({ blogRoot }) {\r\n  let { title, data, url } = useCurrentRoute()\r\n\r\n  return (\r\n    <View>\r\n      {({ MDXComponent, readingTime }) =>\r\n        // The content for posts is an MDX component, so we'll need\r\n        // to use <MDXProvider> to ensure that links are rendered\r\n        // with <Link>, and thus use pushState.\r\n        <article className={styles.container}>\r\n          <header className={styles.header}>\r\n            <h1 className={styles.title}>\r\n              <Link href={url.pathname}>{title}</Link>\r\n            </h1>\r\n            <ArticleMeta\r\n              blogRoot={blogRoot}\r\n              meta={data}\r\n              readingTime={readingTime}\r\n            />\r\n          </header>\r\n          <MDXProvider components={{\r\n            a: Link,\r\n            wrapper: ({ children }) =>\r\n              <div className={styles.content}>\r\n                {children}\r\n              </div>\r\n          }}>\r\n            <MDXComponent />\r\n          </MDXProvider>\r\n          <footer className={styles.footer}>\r\n            <h3 className={styles.title}>\r\n              <Link href={blogRoot}>\r\n                {siteMetadata.title}\r\n              </Link>\r\n            </h3>\r\n            <Bio className={styles.bio} />\r\n            <section className={styles.links}>\r\n              {\r\n                data.previousDetails &&\r\n                <Link className={styles.previous} href={data.previousDetails.href}>\r\n                  ← {data.previousDetails.title}\r\n                </Link>\r\n              }\r\n              {\r\n                data.nextDetails &&\r\n                <Link className={styles.next} href={data.nextDetails.href}>\r\n                  {data.nextDetails.title} →\r\n                </Link>\r\n              }\r\n            </section>\r\n          </footer>\r\n        </article>\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default BlogPostLayout","import importAll from 'import-all.macro'\r\nimport * as Navi from 'navi'\r\nimport { join } from 'path'\r\nimport { sortBy } from 'lodash'\r\nimport slugify from 'slugify'\r\n\r\n// Get a list of all posts, that will not be loaded until the user\r\n// requests them.\r\nconst postModules = importAll.deferred('./**/post.js')\r\nconst importPost = pathname => postModules[pathname]()\r\nconst postPathnames = Object.keys(postModules)\r\nconst datePattern = /^((\\d{1,4})-(\\d{1,4})-(\\d{1,4}))[/-]/\r\n\r\nlet postDetails = postPathnames.map(pathname => {\r\n  let slug = slugify(\r\n    pathname.replace(/post.jsx?$/, '').replace(/(\\d)\\/(\\d)/, '$1-$2'),\r\n  )\r\n    .replace(/^[-.]+|[.-]+$/g, '')\r\n    .replace(datePattern, '$1/')\r\n\r\n  let date\r\n  let dateMatch = slug.match(datePattern)\r\n  if (dateMatch) {\r\n    date = new Date(dateMatch[2], parseInt(dateMatch[3]) - 1, dateMatch[4])\r\n  }\r\n\r\n  return {\r\n    slug,\r\n    pathname,\r\n    date,\r\n  }\r\n})\r\n\r\n// Sort the pages by slug (which contain the dates)\r\npostDetails = sortBy(postDetails, ['slug']).reverse()\r\n\r\n// Create url-friendly slugs from post pathnames, and a `getPage()` function\r\n// that can be used to load and return the post's Page object.\r\nlet posts = postDetails.map(({ slug, pathname, date }, i) => ({\r\n  getPage: Navi.map(async () => {\r\n    let { default: post } = await importPost(pathname)\r\n    let { title, getContent, ...meta } = post\r\n    let previousSlug, previousPost, nextSlug, nextPost\r\n\r\n    if (i !== 0) {\r\n      let previousPostDetails = postDetails[i - 1]\r\n      previousPost = (await importPost(previousPostDetails.pathname)).default\r\n      previousSlug = previousPostDetails.slug\r\n    }\r\n\r\n    if (i + 1 < postDetails.length) {\r\n      let nextPostDetails = postDetails[i + 1]\r\n      nextPost = (await importPost(nextPostDetails.pathname)).default\r\n      nextSlug = nextPostDetails.slug\r\n    }\r\n\r\n    return Navi.route({\r\n      title,\r\n      getData: (req, context) => ({\r\n        date,\r\n        pathname,\r\n        slug,\r\n        previousDetails: previousPost && {\r\n          title: previousPost.title,\r\n          href: join(context.blogRoot, 'posts', previousSlug),\r\n        },\r\n        nextDetails: nextPost && {\r\n          title: nextPost.title,\r\n          href: join(context.blogRoot, 'posts', nextSlug),\r\n        },\r\n        ...meta,\r\n      }),\r\n      getView: async () => {\r\n        let { default: MDXComponent, ...other } = await getContent()\r\n        return { MDXComponent, ...other }\r\n      },\r\n    })\r\n  }),\r\n  slug,\r\n}))\r\n\r\nexport default posts\r\n","import { compose, lazy, map, mount, redirect, route, withContext, withView } from 'navi'\r\nimport React from 'react'\r\nimport { join } from 'path'\r\nimport { chunk, fromPairs } from 'lodash'\r\nimport BlogIndexPage from '../components/BlogIndexPage'\r\nimport BlogLayout from '../components/BlogLayout'\r\nimport BlogPostLayout from '../components/BlogPostLayout'\r\nimport siteMetadata from '../siteMetadata'\r\nimport posts from './posts'\r\n\r\n// Split the posts into a list of chunks of the given size, and\r\n// then build index pages for each chunk.\r\nlet chunks = chunk(posts, siteMetadata.indexPageSize)\r\nlet chunkPagePairs = chunks.map((chunk, i) => [\r\n  '/' + (i + 1),\r\n  map(async (req, context) => {\r\n    // Get metadata for all pages on this page\r\n    let postRoutes = await Promise.all(\r\n      chunk.map(async post => {\r\n        let href = join(context.blogRoot, 'posts', post.slug)\r\n        return await req.router.resolve(href, {\r\n          // If you want to show the page content on the index page, set\r\n          // this to 'GET' to be able to access it.\r\n          method: 'HEAD',\r\n        })\r\n      }),\r\n    )\r\n\r\n    // Only add a page number to the page title after the first index page.\r\n    let pageTitle = siteMetadata.title\r\n    if (i > 0) {\r\n      pageTitle += ` – page ${i + 1}`\r\n    }\r\n\r\n    return route({\r\n      title: pageTitle,\r\n      view: (\r\n        <BlogIndexPage\r\n          blogRoot={context.blogRoot}\r\n          pageNumber={i + 1}\r\n          pageCount={chunks.length}\r\n          postRoutes={postRoutes}\r\n        />\r\n      ),\r\n    })\r\n  }),\r\n])\r\n\r\nconst routes = compose(\r\n  withContext((req, context) => ({\r\n    ...context,\r\n    blogRoot: req.mountpath || '/',\r\n  })),\r\n  withView((req, context) => {\r\n    // Check if the current page is an index page by comparing the remaining\r\n    // portion of the URL's pathname with the index page paths.\r\n    let isViewingIndex = req.path === '/' || /^\\/page\\/\\d+\\/$/.test(req.path)\r\n\r\n    // Render the application-wide layout\r\n    return (\r\n      <BlogLayout\r\n        blogRoot={context.blogRoot}\r\n        isViewingIndex={isViewingIndex}\r\n      />\r\n    )\r\n  }),\r\n  mount({\r\n    // The blog's index pages go here. The first index page is mapped to the\r\n    // root URL, with a redirect from \"/page/1\". Subsequent index pages are\r\n    // mapped to \"/page/n\".\r\n    '/': chunkPagePairs.shift()[1],\r\n    '/page': mount({\r\n      '/1': redirect((req, context) => context.blogRoot),\r\n      ...fromPairs(chunkPagePairs),\r\n    }),\r\n\r\n    // Put posts under \"/posts\", so that they can be wrapped with a\r\n    // \"<BlogPostLayout />\" that configures MDX and adds a post-specific layout.\r\n    '/posts': compose(\r\n      withView((req, context) => <BlogPostLayout blogRoot={context.blogRoot} />),\r\n      mount(fromPairs(posts.map(post => ['/' + post.slug, post.getPage]))),\r\n    ),\r\n\r\n    // Miscellaneous pages can be added directly to the root switch.\r\n    '/tags': lazy(() => import('./tags')),\r\n    '/about': lazy(() => import('./about')),\r\n\r\n    // Only the statically built copy of the RSS feed is intended to be opened,\r\n    // but the content is fetched here.\r\n    '/rss': route({\r\n      getData: req => req.router.resolveSiteMap('/posts', { method: 'GET' }),\r\n    }),\r\n  }),\r\n)\r\n\r\nexport default routes\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import register from \"navi-scripts/register\";\r\nimport * as Navi from \"navi\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { NaviProvider, View } from \"react-navi\";\r\nimport \"./index.module.css\";\r\nimport routes from \"./routes\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n// `register()` is responsible for exporting your app's pages and App\r\n// component to the static renderer, and for starting the app with the\r\n// `main()` function when running within a browser.\r\nregister({\r\n  // Specify the pages that navi-app should statically build, by passing in a\r\n  // Switch object.\r\n  routes,\r\n\r\n  // This will only be called when loading your app in the browser. It won't\r\n  // be called when performing static generation.\r\n  async main() {\r\n    let navigation = Navi.createBrowserNavigation({ routes });\r\n    console.log(routes)\r\n\r\n    // Wait until the navigation has loaded the page's content, or failed to do\r\n    // so. If you want to load other data in parallel while the initial page is\r\n    // loading, make sure to start loading before this line.\r\n    await navigation.steady();\r\n\r\n    // React requires that you call `ReactDOM.hydrate` if there is statically\r\n    // rendered content in the root element, but prefers us to call\r\n    // `ReactDOM.render` when it is empty.\r\n    let hasStaticContent = process.env.NODE_ENV === \"production\";\r\n    let renderer = hasStaticContent ? ReactDOM.hydrate : ReactDOM.render;\r\n\r\n    // Start react, passing in the current navigation state via the\r\n    // NaviProvider.\r\n    renderer(\r\n      <NaviProvider navigation={navigation}>\r\n        <View />\r\n      </NaviProvider>,\r\n      document.getElementById(\"root\")\r\n    )\r\n\r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: http://bit.ly/CRA-PWA\r\n    serviceWorker.unregister();\r\n  }\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__3uJSt\",\"previous\":\"Pagination_previous__f5rQA\",\"next\":\"Pagination_next__2osWN\"};"],"sourceRoot":""}